{"ast":null,"code":"var _jsxFileName = \"A:\\\\HETIC\\\\Front\\\\React\\\\wphetic-todolist\\\\src\\\\Component\\\\Todolist\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DisplayCardContent from \"./DisplayCardContent\";\nimport HandleStatusButton from \"./Buttons/HandleStatusButton\";\nimport HandleModifButton from \"./Buttons/HandleModifButton\";\nimport HandleDeleteButton from \"./Buttons/HandleDeleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n\n  let {\n    id,\n    title,\n    content,\n    status,\n    setCards,\n    cards\n  } = _ref;\n  const [cardEdit, setcardEdit] = useState(false);\n  const [titleEdit, settitleEdit] = useState(title);\n  const [contentEdit, setcontentEdit] = useState(content); // Allow the modification of the status from 'todo' to 'done'\n\n  function handleStatus() {\n    switch (status) {\n      case true:\n        status = false;\n        break;\n\n      case false:\n        status = true;\n        break;\n    }\n\n    let newCardList = cards.map(e => {\n      if (e.id === id) {\n        return { ...e,\n          status: status\n        };\n      }\n\n      return e;\n    });\n    setCards(newCardList);\n  } // Save the edited card to the list\n\n\n  function SaveEditedCard() {\n    setcardEdit(false);\n  } // return the component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-5 mx-auto\",\n    style: {\n      maxWidth: '400px',\n      minWidth: '250px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(HandleModifButton, {\n      status: status,\n      cardEdit: cardEdit,\n      setcardEdit: setcardEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(DisplayCardContent, {\n        titleEdit: titleEdit,\n        contentEdit: contentEdit,\n        settitleEdit: settitleEdit,\n        setcontentEdit: setcontentEdit,\n        title: title,\n        content: content,\n        cardEdit: cardEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(HandleDeleteButton, {\n            cards: cards,\n            setCards: setCards,\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(HandleStatusButton, {\n            cardEdit: cardEdit,\n            handleStatus: handleStatus,\n            SaveEditedCard: SaveEditedCard,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"Zqkw52oj08722vjYktQnte8xrPI=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["A:/HETIC/Front/React/wphetic-todolist/src/Component/Todolist/Card.js"],"names":["React","useState","DisplayCardContent","HandleStatusButton","HandleModifButton","HandleDeleteButton","Card","id","title","content","status","setCards","cards","cardEdit","setcardEdit","titleEdit","settitleEdit","contentEdit","setcontentEdit","handleStatus","newCardList","map","e","SaveEditedCard","maxWidth","minWidth"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport DisplayCardContent from \"./DisplayCardContent\";\nimport HandleStatusButton from \"./Buttons/HandleStatusButton\";\nimport HandleModifButton from \"./Buttons/HandleModifButton\";\nimport HandleDeleteButton from \"./Buttons/HandleDeleteButton\";\n\nexport default function Card({id, title, content, status, setCards, cards}) {\n\n    const [cardEdit, setcardEdit] = useState(false);\n    const [titleEdit, settitleEdit] = useState(title);\n    const [contentEdit, setcontentEdit] = useState(content);\n\n    // Allow the modification of the status from 'todo' to 'done'\n    function handleStatus() {\n        switch(status) {\n            case true:\n                status = false;\n                break;\n            case false:\n                status = true;\n                break;\n        }\n        let newCardList = cards.map(e => {\n            if(e.id === id) {\n                return {...e, status: status\n                }\n            }\n            return e;\n        });\n        setCards(newCardList);\n    }\n\n    // Save the edited card to the list\n    function SaveEditedCard() {\n        setcardEdit(false);\n    }\n\n    // return the component\n    return (\n        <div className=\"card mb-5 mx-auto\" style={{maxWidth:'400px', minWidth:'250px'}}>\n            <HandleModifButton status={status} cardEdit={cardEdit} setcardEdit={setcardEdit} />\n            <div className=\"card-body\">\n                <DisplayCardContent titleEdit={titleEdit} contentEdit={contentEdit} settitleEdit={settitleEdit} setcontentEdit={setcontentEdit} title={title} content={content} cardEdit={cardEdit} />\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <HandleDeleteButton cards={cards} setCards={setCards} id={id}/>\n                    </div>\n                    <div className=\"col\">\n                        <HandleStatusButton cardEdit={cardEdit} handleStatus={handleStatus} SaveEditedCard={SaveEditedCard} status={status}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}