{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Limiter(_ref) {\n  _s();\n\n  let {\n    cards,\n    setLimiter\n  } = _ref;\n  // todo : \"export\" const limiter to parent in order tu use in Form (update button onClick function)\n  useEffect(() => {\n    // ce que je veux : map cards -> count++ si status === 0. Si count > 10 -> STOP\n    let count = cards.filter(e => e.status == false).length;\n\n    if (count >= 10) {\n      setLimiter(true);\n    } else {\n      setLimiter(false);\n    }\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Limiter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Limiter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Limiter\");","map":{"version":3,"sources":["A:/HETIC/Front/React/wphetic-todolist/src/Middleware/Limiter.js"],"names":["useEffect","Limiter","cards","setLimiter","count","filter","e","status","length"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;;AAEA,eAAe,SAASC,OAAT,OAAqC;AAAA;;AAAA,MAApB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAoB;AAEhD;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAII,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAAF,IAAY,KAA9B,EAAqCC,MAAjD;;AAEA,QAAGJ,KAAK,IAAI,EAAZ,EAAgB;AACZD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GATQ,EASN,CAACD,KAAD,CATM,CAAT;AAWA,sBACI,qCADJ;AAGH;;GAjBuBD,O;;KAAAA,O","sourcesContent":["import {useEffect} from \"react\";\n\nexport default function Limiter({cards,setLimiter}) {\n\n    // todo : \"export\" const limiter to parent in order tu use in Form (update button onClick function)\n    useEffect(() => {\n        // ce que je veux : map cards -> count++ si status === 0. Si count > 10 -> STOP\n        let count = cards.filter(e => e.status == false).length;\n\n        if(count >= 10) {\n            setLimiter(true);\n        } else {\n            setLimiter(false);\n        }\n    }, [cards]);\n\n    return (\n        <></>\n    )\n}"]},"metadata":{},"sourceType":"module"}