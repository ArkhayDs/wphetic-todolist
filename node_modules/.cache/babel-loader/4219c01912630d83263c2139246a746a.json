{"ast":null,"code":"var _jsxFileName = \"/Users/kavalier.e.39/Documents/HETIC/Front/React/Todo/src/Component/Form.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  _s();\n\n  let {\n    setCards\n  } = _ref;\n  const [formTitle, setformTitle] = useState('');\n  const [formContent, setformContent] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (formTitle !== \"\" && formContent !== \"\") {\n      const newCard = {\n        id: generateUniqueID(),\n        title: formTitle,\n        content: formContent,\n        status: false\n      };\n      setCards(prev => [...prev, newCard]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"m-5 mx-auto\",\n    style: {\n      maxWidth: '450px'\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Alimentez votre todo !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputTitle\",\n        className: \"form-label\",\n        children: \"Nom de la t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        className: \"form-control\",\n        id: \"inputTitle\",\n        \"aria-describedby\": \"titleHelp\",\n        onChange: e => setformTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputContent\",\n        className: \"form-label\",\n        children: \"Contenu de la t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"content\",\n        className: \"form-control\",\n        id: \"inputContent\",\n        \"aria-describedby\": \"contentHelp\",\n        onChange: e => setformContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"addTodo\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n/*\nexport default class Form extends Component {\n    setCards = this.props.setCards;\n    limiter = this.props.limiter;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title:\"\",\n            content:\"\",\n            status:false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    getTitle = (e) => {\n        this.setState({title: e.target.value});\n    }\n\n    getContent = (e) => {\n        this.setState({content: e.target.value});\n    }\n\n    handleSubmit (event) {\n        event.preventDefault();\n            if (this.state.title !== \"\" && this.state.content !== \"\") {\n                const newCard = {\n                    id: generateUniqueID(),\n                    title: this.state.title,\n                    content: this.state.content,\n                    status: false\n                };\n\n                if(this.limiter === false) {\n                    this.setCards(prev => [...prev, newCard]);\n                } else {\n                    document.getElementById('addTodo').onclick = () => {alert(\"oh wtf guy, there is too many tasks. Please take care of them first ! xoxo\");}\n                }\n\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"m-5 mx-auto\" style={{maxWidth: '450px'}} onSubmit={this.handleSubmit}>\n                <h1 className=\"text-center\">Alimentez votre todo !</h1>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"inputTitle\" className=\"form-label\">Nom de la t창che</label>\n                    <input type=\"title\" className=\"form-control\" id=\"inputTitle\" aria-describedby=\"titleHelp\"\n                           onChange={this.getTitle}/>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"inputContent\" className=\"form-label\">Contenu de la t창che</label>\n                    <input type=\"content\" className=\"form-control\" id=\"inputContent\" aria-describedby=\"contentHelp\"\n                           onChange={this.getContent}/>\n                </div>\n                <button type=\"submit\" id=\"addTodo\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        )\n    }\n}*/\n\n_s(Form, \"3E0kfjSaGmXO28RTHOz71OieI2E=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/kavalier.e.39/Documents/HETIC/Front/React/Todo/src/Component/Form.js"],"names":["Component","useState","generateUniqueID","Form","setCards","formTitle","setformTitle","formContent","setformContent","handleSubmit","e","preventDefault","newCard","id","title","content","status","prev","maxWidth","target","value"],"mappings":"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","sourcesContent":["import {Component, useState} from \"react\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nexport default function Form({setCards}) {\n    const [formTitle, setformTitle] = useState('');\n    const [formContent, setformContent] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (formTitle !== \"\" && formContent !== \"\") {\n            const newCard = {\n                id: generateUniqueID(),\n                title: formTitle,\n                content: formContent,\n                status: false\n            };\n\n            setCards(prev => [...prev, newCard]);\n\n        }\n    }\n\n    return (\n        <form className=\"m-5 mx-auto\" style={{maxWidth: '450px'}} onSubmit={handleSubmit}>\n            <h1 className=\"text-center\">Alimentez votre todo !</h1>\n            <div className=\"mb-3\">\n                <label htmlFor=\"inputTitle\" className=\"form-label\">Nom de la t창che</label>\n                <input type=\"title\" className=\"form-control\" id=\"inputTitle\" aria-describedby=\"titleHelp\"\n                       onChange={e => setformTitle(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"inputContent\" className=\"form-label\">Contenu de la t창che</label>\n                <input type=\"content\" className=\"form-control\" id=\"inputContent\" aria-describedby=\"contentHelp\"\n                       onChange={e => setformContent(e.target.value)}/>\n            </div>\n            <button type=\"submit\" id=\"addTodo\" className=\"btn btn-primary\">Submit</button>\n        </form>\n    )\n}\n/*\nexport default class Form extends Component {\n    setCards = this.props.setCards;\n    limiter = this.props.limiter;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title:\"\",\n            content:\"\",\n            status:false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    getTitle = (e) => {\n        this.setState({title: e.target.value});\n    }\n\n    getContent = (e) => {\n        this.setState({content: e.target.value});\n    }\n\n    handleSubmit (event) {\n        event.preventDefault();\n            if (this.state.title !== \"\" && this.state.content !== \"\") {\n                const newCard = {\n                    id: generateUniqueID(),\n                    title: this.state.title,\n                    content: this.state.content,\n                    status: false\n                };\n\n                if(this.limiter === false) {\n                    this.setCards(prev => [...prev, newCard]);\n                } else {\n                    document.getElementById('addTodo').onclick = () => {alert(\"oh wtf guy, there is too many tasks. Please take care of them first ! xoxo\");}\n                }\n\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"m-5 mx-auto\" style={{maxWidth: '450px'}} onSubmit={this.handleSubmit}>\n                <h1 className=\"text-center\">Alimentez votre todo !</h1>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"inputTitle\" className=\"form-label\">Nom de la t창che</label>\n                    <input type=\"title\" className=\"form-control\" id=\"inputTitle\" aria-describedby=\"titleHelp\"\n                           onChange={this.getTitle}/>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"inputContent\" className=\"form-label\">Contenu de la t창che</label>\n                    <input type=\"content\" className=\"form-control\" id=\"inputContent\" aria-describedby=\"contentHelp\"\n                           onChange={this.getContent}/>\n                </div>\n                <button type=\"submit\" id=\"addTodo\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        )\n    }\n}*/\n"]},"metadata":{},"sourceType":"module"}