{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const [limiter, setLimiter] = useState(false);\nexport default function Limiter(_ref) {\n  _s();\n\n  let {\n    cards\n  } = _ref;\n\n  function alertBox() {\n    alert(\"oh wtf guy, there is too many tasks. Please take care of them first ! xoxo\");\n  }\n\n  useEffect(() => {\n    // ce que je veux : map cards -> count++ si status === 0. Si count > 10 -> STOP\n    let count = cards.filter(e => e.status === false).length;\n    console.log(\"length\", cards.filter(e => e.status === false).length);\n    console.log(\"count\", count);\n    console.log(cards);\n    return () => {\n      if (count >= 9) {\n        setLimiter(true);\n      } else {\n        setLimiter(false);\n      }\n    };\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Limiter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Limiter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Limiter\");","map":{"version":3,"sources":["/Users/kavalier.e.39/Documents/HETIC/Front/React/Todo/src/Middleware/Limiter.js"],"names":["useEffect","useState","limiter","setLimiter","Limiter","cards","alertBox","alert","count","filter","e","status","length","console","log"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,OAAO,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBF,QAAQ,CAAC,KAAD,CAArC;AAEP,eAAe,SAASG,OAAT,OAA0B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;;AAGrC,WAASC,QAAT,GAAoB;AAChBC,IAAAA,KAAK,CAAC,4EAAD,CAAL;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIQ,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,KAA/B,EAAsCC,MAAlD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBT,KAAK,CAACI,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,KAA/B,EAAsCC,MAA3D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBN,KAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEA,WAAO,MAAM;AACT,UAAGG,KAAK,IAAI,CAAZ,EAAe;AACXL,QAAAA,UAAU,CAAE,IAAF,CAAV;AACH,OAFD,MAEO;AACHA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAND;AAOH,GAdQ,EAcN,CAACE,KAAD,CAdM,CAAT;AAgBA,sBACI,qCADJ;AAGH;;GA1BuBD,O;;KAAAA,O","sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport const [limiter,setLimiter] = useState(false);\n\nexport default function Limiter({cards}) {\n\n\n    function alertBox() {\n        alert(\"oh wtf guy, there is too many tasks. Please take care of them first ! xoxo\");\n    }\n\n    useEffect(() => {\n        // ce que je veux : map cards -> count++ si status === 0. Si count > 10 -> STOP\n        let count = cards.filter(e => e.status === false).length;\n        console.log(\"length\",cards.filter(e => e.status === false).length);\n        console.log(\"count\",count);\n        console.log(cards);\n\n        return () => {\n            if(count >= 9) {\n                setLimiter( true);\n            } else {\n                setLimiter(false);\n            }\n        };\n    }, [cards]);\n\n    return (\n        <></>\n    )\n}"]},"metadata":{},"sourceType":"module"}