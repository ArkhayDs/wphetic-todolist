{"ast":null,"code":"var _jsxFileName = \"/Users/kavalier.e.39/Documents/HETIC/Front/React/Todo/src/Component/Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    id,\n    title,\n    content,\n    status,\n    setCards,\n    cards\n  } = _ref;\n\n  function handleDelete() {\n    let newCardList = cards.filter(e => e.id !== id);\n    setCards(newCardList);\n  }\n\n  function handleStatus() {\n    switch (status) {\n      case true:\n        status = false;\n        break;\n\n      case false:\n        status = true;\n        break;\n    }\n\n    let newCardList = cards.map(e => {\n      if (e.id === id) {\n        return { ...e,\n          status: status\n        };\n      }\n\n      return e;\n    });\n    setCards(newCardList);\n  }\n\n  function HandleButton() {\n    console.log(status);\n\n    switch (status) {\n      case 'true':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          id: \"inputStatus\",\n          onClick: () => handleStatus(),\n          children: \"Undone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'false':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          id: \"inputStatus\",\n          onClick: () => handleStatus(),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n        break;\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-5 mx-auto\",\n    style: {\n      maxWidth: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDelete(),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(HandleButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/kavalier.e.39/Documents/HETIC/Front/React/Todo/src/Component/Card.js"],"names":["Card","id","title","content","status","setCards","cards","handleDelete","newCardList","filter","e","handleStatus","map","HandleButton","console","log","maxWidth"],"mappings":";;;AAAA,eAAe,SAASA,IAAT,OAA6D;AAAA,MAA/C;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA;AAAvC,GAA+C;;AAExE,WAASC,YAAT,GAAwB;AACpB,QAAIC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAA3B,CAAlB;AACAI,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACH;;AAED,WAASG,YAAT,GAAwB;AACpB,YAAOP,MAAP;AACI,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAG,KAAT;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,MAAM,GAAG,IAAT;AACA;AANR;;AAQA,QAAII,WAAW,GAAGF,KAAK,CAACM,GAAN,CAAUF,CAAC,IAAI;AAC7B,UAAGA,CAAC,CAACT,EAAF,KAASA,EAAZ,EAAgB;AACZ,eAAO,EAAC,GAAGS,CAAJ;AAAON,UAAAA,MAAM,EAAEA;AAAf,SAAP;AAEH;;AACD,aAAOM,CAAP;AACH,KANiB,CAAlB;AAQAL,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACH;;AAED,WAASK,YAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;;AACA,YAAQA,MAAR;AACI,WAAK,MAAL;AACI,4BAAO;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAiD,UAAA,EAAE,EAAC,aAApD;AAAkE,UAAA,OAAO,EAAE,MAAMO,YAAY,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACJ,WAAK,OAAL;AACI,4BAAO;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,EAAE,EAAC,aAArD;AAAmE,UAAA,OAAO,EAAE,MAAMA,YAAY,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACJ;AACI,4BAAO,qCAAP;AARR;AAUH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAC;AAAV,KAA1C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4Bd;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAE,MAAMI,YAAY,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;KA1DuBP,I","sourcesContent":["export default function Card({id, title, content, status, setCards, cards}) {\n\n    function handleDelete() {\n        let newCardList = cards.filter(e => e.id !== id);\n        setCards(newCardList);\n    }\n\n    function handleStatus() {\n        switch(status) {\n            case true:\n                status = false;\n                break;\n            case false:\n                status = true;\n                break;\n        }\n        let newCardList = cards.map(e => {\n            if(e.id === id) {\n                return {...e, status: status\n                }\n            }\n            return e;\n        });\n\n        setCards(newCardList);\n    }\n\n    function HandleButton() {\n        console.log(status);\n        switch (status) {\n            case 'true':\n                return <button type=\"submit\" className=\"btn btn-danger\" id=\"inputStatus\" onClick={() => handleStatus()}>Undone</button>;\n                break;\n            case 'false':\n                return <button type=\"submit\" className=\"btn btn-success\" id=\"inputStatus\" onClick={() => handleStatus()}>Done</button>;\n                break;\n            default :\n                return <></>\n        }\n    }\n\n    return (\n        <div className=\"card mb-5 mx-auto\" style={{maxWidth:'400px'}}>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n                <p className=\"card-text\">{content}</p>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button className=\"btn btn-danger\" onClick={() => handleDelete()}>Supprimer</button>\n                    </div>\n                    <div className=\"col\">\n                        <HandleButton />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}